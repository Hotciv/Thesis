from reading_datasets import *
from aux_functions import *

y = ds3.pop('Result')
y = y.to_numpy()
X = ds3.to_numpy()

# test of class
dataset_splits(X, y, 200, 1, 0)
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 20, 1, 0)

# split == len(list)
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 2, [1,2], 0)
# list as ndarray
a = np.array([1,2])
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 2, a, 0)

# split < len(list)
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 2, [5,6,7], 0)
# list as ndarray
a = np.array([5,6,7])
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 2, a, 0)

# split > len(list)
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 4, [5,6,7], 0)

X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 4, [6,7], 0)

# list as ndarray
a = np.array([5,6,7])
X_train, X_test, y_train, y_test, selected = dataset_split(X, y, 4, a, 0)

X = np.array(list(range(100)))
y = np.ones(100)
y[0:50] *= -1